include(${CMAKE_SOURCE_DIR}/cmake/build.cmake)

find_package(Qt6 6.5 REQUIRED COMPONENTS Quick)

option(BUILD_HUSKARUI_STATIC_LIBRARY "HuskarUI is static library." OFF)

add_subdirectory(dependencies)

# Qt build specific options, need to be defined before any Qt target
# qt_standard_project_setup()
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_AUTOUIC ON)

qt_add_executable(${PROJECT_NAME})

add_dependencies(${CMAKE_PROJECT_NAME} fetch_all)

include_directories(${CMAKE_CURRENT_LIST_DIR}/common)
include_directories(${CMAKE_CURRENT_LIST_DIR}/dependencies/spdlog/include)

capitalize(${PROJECT_NAME} APP_NAME)

target_compile_definitions(${PROJECT_NAME} PRIVATE
        $<$<BOOL:${BUILD_HUSKARUI_STATIC_LIBRARY}>:BUILD_HUSKARUI_STATIC_LIBRARY>
        APP_NAME="${APP_NAME}"
        APP_VERSION="${PROJECT_VERSION}"
)

set_target_properties(${PROJECT_NAME} PROPERTIES
        MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
        MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
        MACOSX_BUNDLE TRUE
        WIN32_EXECUTABLE TRUE
)

target_include_directories(${CMAKE_PROJECT_NAME} PRIVATE ${CMAKE_PREFIX_PATH}/include/HuskarUI)
target_link_directories(${CMAKE_PROJECT_NAME} PRIVATE ${CMAKE_PREFIX_PATH}/lib)
target_link_libraries(${CMAKE_PROJECT_NAME} PRIVATE
        Qt6::Quick
        HuskarUIBasic
        $<$<BOOL:${BUILD_HUSKARUI_STATIC_LIBRARY}>:HuskarUIBasicPlugin>
)

set(WIN_RC_FILE "")
if (WIN32)
    include(${CMAKE_SOURCE_DIR}/src/dependencies/HuskarUI/src/HuskarUI/.cmake/HuskarUIHelper.cmake)
    string(TIMESTAMP CURRENT_YEAR "%Y")
    set(WIN_RC_FILE ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}_Resource.rc)
    hus_add_win_rc(${PROJECT_NAME}
            COMMENTS "Equinox"
            NAME "${PROJECT_NAME}.exe"
            COMPANY "BluerRbbit studio"
            DESCRIPTION "Tool for IEC60870-5-101/104 protocol"
            VERSION "${PROJECT_VERSION}"
            COPYRIGHT "Copyright (C) ${CURRENT_YEAR} mengps. All rights reserved."
            ICONS resources/icon.ico
            OUTPUT_FILE "${WIN_RC_FILE}"
    )
endif ()

set_target_output_dir(${CMAKE_PROJECT_NAME} ${PREFIX_PATH} EXE)

# add additional sources from subdirectories
add_subdirectory(common)
add_subdirectory(model)
add_subdirectory(view)
add_subdirectory(viewmodel)
add_subdirectory(herald)
